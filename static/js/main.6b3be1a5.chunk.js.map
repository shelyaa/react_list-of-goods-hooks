{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","alphabetically","localeCompare","length","getPreparedGoods","className","type","onClick","cn","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAMKA,E,sFAAAA,K,gCAAAA,E,gBAAAA,E,YAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAmBH,EAASI,SAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAjCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcJ,UAGTI,EAOcO,CACnBjB,EACAI,EACAE,GAYF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaN,EAASe,iBACrCI,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcL,EAASe,iBAJvC,iCAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMf,EAAaN,EAASiB,SACrCE,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcL,EAASiB,SAJvC,4BAUA,wBACEG,KAAK,SACLD,UAAWG,IAAG,oBAAqB,CACjC,YAAaf,IAEfc,QAAS,kBAAMb,GAAW,SAAAe,GAAO,OAAKA,MALxC,sBAUEhB,GAAWF,IACX,wBACEe,KAAK,SACLD,UAAU,4BACVE,QA1CI,WACZf,EAAaN,EAASI,SACtBI,GAAW,IAqCL,sBAWJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCtHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b3be1a5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nenum SortType {\n  alphabetically = 'alphabetically',\n  length = 'length',\n  default = '',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: SortType,\n  reverse: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabetically:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.default);\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    reverse,\n  );\n\n  // const handleSort = (sort: SortType) => () => setSortField(sort);\n\n  // const handleReverse = () => setReverse(!reverse);\n\n  const reset = () => {\n    setSortField(SortType.default);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alphabetically)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.alphabetically,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={() => setReverse(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {(reverse || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}